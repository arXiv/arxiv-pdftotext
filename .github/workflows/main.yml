name: ci

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:
  workflow_dispatch: # Used by config repo


env:
  IMAGE_NAME: pdftotext-docker-rest

jobs:
  # Push image to GitHub Packages.
  testbuildpush:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: true
      - name: Test & build image
        run: |
          set -xe
          sudo apt install -y python3
          python3 -m pip install flake8
          ./tests/tests.sh
          sudo docker build . --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | sudo docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        if: github.event_name == 'push'
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          sudo docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          sudo docker push $IMAGE_ID:$VERSION
          sudo docker tag $IMAGE_NAME $IMAGE_ID:$GITHUB_SHA
          sudo docker push $IMAGE_ID:$GITHUB_SHA